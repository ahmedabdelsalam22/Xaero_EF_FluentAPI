// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xaero_EF.Data;

#nullable disable

namespace Xaero_EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Core.Models.Distribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TelePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Distribution");
                });

            modelBuilder.Entity("EF_Core.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductionCompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductionCompanyId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("EF_Core.Models.MovieDetail", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<decimal>("Budget")
                        .HasColumnType("Money");

                    b.Property<decimal>("Gross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("Date");

                    b.HasKey("MovieId");

                    b.ToTable("MovieDetail");
                });

            modelBuilder.Entity("EF_Core.Models.MovieDistribution", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("DistributionId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "DistributionId");

                    b.HasIndex("DistributionId");

                    b.ToTable("MovieDistribution");
                });

            modelBuilder.Entity("EF_Core.Models.ProductionCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AnnualReveune")
                        .HasColumnType("Money");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("Date");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductionCompany");
                });

            modelBuilder.Entity("EF_Core.Models.Movie", b =>
                {
                    b.HasOne("EF_Core.Models.ProductionCompany", "ProductionCompany")
                        .WithMany("Movies")
                        .HasForeignKey("ProductionCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionCompany");
                });

            modelBuilder.Entity("EF_Core.Models.MovieDetail", b =>
                {
                    b.HasOne("EF_Core.Models.Movie", "Movie")
                        .WithOne("MovieDetail")
                        .HasForeignKey("EF_Core.Models.MovieDetail", "MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("EF_Core.Models.MovieDistribution", b =>
                {
                    b.HasOne("EF_Core.Models.Distribution", "Distributions")
                        .WithMany("MovieDistribution")
                        .HasForeignKey("DistributionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Core.Models.Movie", "Movies")
                        .WithMany("MovieDistribution")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distributions");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("EF_Core.Models.Distribution", b =>
                {
                    b.Navigation("MovieDistribution");
                });

            modelBuilder.Entity("EF_Core.Models.Movie", b =>
                {
                    b.Navigation("MovieDetail")
                        .IsRequired();

                    b.Navigation("MovieDistribution");
                });

            modelBuilder.Entity("EF_Core.Models.ProductionCompany", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
